{"version":3,"sources":["panels/Home.js","App.js","index.js","img/background.jpg"],"names":["day","Date","getDate","month","getMonth","year","getFullYear","Home","id","fetchedUser","go","title","before","photo_200","src","description","city","first_name","last_name","class","className","cartochka","alt","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","bridge","send","user","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+qBAWIA,GAAM,IAAIC,MAAOC,UACjBF,EAAM,KAAIA,EAAM,IAAMA,GAC1B,IAAIG,GAAQ,IAAIF,MAAOG,WACnBD,EAAQ,KAAIA,EAAQ,IAAMA,GAC9B,IAAIE,GAAO,IAAIJ,MAAOK,cAmCPC,EAjCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAX,OACZ,kBAAC,IAAD,CAAOD,GAAIA,GACTC,GACD,kBAAC,IAAD,CAAOE,MAAM,oCACZ,kBAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKL,MAAQF,EAAYO,KAAKL,MAAQ,IAFpF,UAIKF,EAAYQ,WAJjB,YAI+BR,EAAYS,UAJ3C,OAOAT,GACD,kBAAC,IAAD,CAAKU,MAAM,aACV,yBAAKC,UAAU,OAAON,IAAKO,IAAWC,IAAI,SAC1C,yBAAKH,MAAM,UAAX,kBAA2BV,EAAYD,KACvC,yBAAKW,MAAM,YAAX,UAA0BV,EAAYQ,WAAtC,YAAoDR,EAAYS,YAChE,yBAAKC,MAAM,eAAX,UAA6BnB,EAA7B,YAAoCG,EAApC,YAA6CE,OCAjCkB,EAzBH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVf,EAFU,KAEGkB,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CACf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CADe,uBAAC,WAAD,wBAMfM,KACE,IAMH,OACC,kBAAC,IAAD,CAAMX,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMrB,GAAG,OAAOC,YAAaA,EAAaC,GANjC,SAAA2B,GACVX,EAAeW,EAAEC,cAAcC,QAAQC,SCfzCP,IAAOC,KAAK,gBAEZO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCVjDC,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.38358e79.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport './Home.css';\nimport cartochka from '../img/background.jpg';\n\nlet day = new Date().getDate();\nif (day < 10) day = '0' + day;\nlet month = new Date().getMonth();\nif (month < 10) month = '0' + month;\nlet year = new Date().getFullYear();\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name} `}\n\t\t\t</Cell>\n\t\t</Group>}\n\t\t{fetchedUser &&\n\t\t<Div class=\"container\">\n\t\t\t<img className=\"Card\" src={cartochka} alt=\"Snow\"/>\n\t\t\t<div class=\"userId\">{`â„– C${fetchedUser.id}`}</div>\n\t\t\t<div class=\"userName\">{`${fetchedUser.first_name} ${fetchedUser.last_name}`}</div>\n\t\t\t<div class=\"currentDate\">{`${day}.${month}.${year}`}</div>\n\t\t</Div>}\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/background.fe7c4a98.jpg\";"],"sourceRoot":""}